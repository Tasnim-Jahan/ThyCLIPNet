# -*- coding: utf-8 -*-
"""Imports.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1oqKxKlQ43G6xHCTaNQR2_9GECndrgSvu
"""

import os

import cv2

import numpy as np

import random

import seaborn as sns

import matplotlib.pyplot as plt

import tensorflow as tf

from PIL import Image

import gc

from glob import glob

from sklearn.utils import shuffle

from tensorflow.keras import backend as K

from tensorflow.keras.models import Model

from tensorflow.keras.applications import MobileNetV2

from tensorflow.keras.optimizers import Adam

from tensorflow.keras.losses import BinaryCrossentropy

from tensorflow.keras.callbacks import (
    ModelCheckpoint, CSVLogger, ReduceLROnPlateau, EarlyStopping,
    TensorBoard, LearningRateScheduler
)

from tensorflow.keras.layers import (
    Input, Conv2D, BatchNormalization, Activation, Concatenate, UpSampling2D, Dropout,
    GlobalAveragePooling2D, GlobalMaxPooling2D, SpatialDropout2D, Reshape, Multiply, Lambda, Dense
)

from tensorflow.keras.metrics import Precision, Recall

import albumentations as A

# ✅ Threading Consistency
#tf.config.threading.set_intra_op_parallelism_threads(1)

#tf.config.threading.set_inter_op_parallelism_threads(1)

# ✅ GPU Memory Growth
gpus = tf.config.experimental.list_physical_devices('GPU')
if gpus:
    try:
        for gpu in gpus:
            tf.config.experimental.set_memory_growth(gpu, True)
        print("✅ TensorFlow GPU memory growth enabled.")
    except RuntimeError as e:
        print(f"⚠️ Error enabling GPU memory growth: {e}")

print("✅ All libraries imported and environment configured.")